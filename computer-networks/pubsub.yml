version: '2'
services:

# Publishers
  publisher1:
    container_name: publisher1
    image: java
    restart: "no"
#    ports:
#      - 9000:9000
    volumes:
      - ./pubsub:/pubsub
    # networks:
    #  pubsub:
    #    ipv4_address: 192.168.10.10
    command: tail -f /dev/null

  publisher2:
    container_name: publisher2
    image: java
    restart: "no"
#    ports:
#      - 9000:9000
    volumes:
      - ./pubsub:/pubsub
    # networks:
    #  pubsub:
    #    ipv4_address: 192.168.10.10
    command: tail -f /dev/null

# Broker
  broker:
    container_name: broker
    image: java
    restart: "no"
#    ports:
#      - 1880:1880
    volumes:
      - ./pubsub:/pubsub
    # networks:
    #  pubsub:
    #    ipv4_address: 192.168.10.20
    command: tail -f /dev/null

# Subscribers
  subscriber1:
    container_name: subscriber1
    image: java
    restart: "no"
    volumes:
      - ./pubsub:/pubsub
    # networks:
    #  pubsub:
    #    ipv4_address: 192.168.10.30
    command: tail -f /dev/null

  subscriber2:
    container_name: subscriber2
    image: java
    restart: "no"
    volumes:
      - ./pubsub:/pubsub
    # networks:
    #  pubsub:
    #    ipv4_address: 192.168.10.30
    command: tail -f /dev/null

# https://hub.docker.com/r/linuxserver/wireshark
# user/password  :  abc/abc
  wireshark:
    image: ghcr.io/linuxserver/wireshark
    container_name: wireshark
    cap_add:
      - NET_ADMIN
    # networks:
    # pubsub:
    #   ipv4_address: 192.168.10.100
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ./wireshark/config:/config
    ports:
      - 3000:3000 #optional
    restart: unless-stopped

# Network
networks:
  pubsub:
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24
          gateway: 192.168.10.1
